start_program
fnc::void goHorizontal(int meters, int direction){
	int distanceTraveled = 0;
	move_horizontal(direction);
	while distanceTraveled < meters ??
		timer(); $$ program waits for one second $$
		distanceTraveled++;
	endwhile
	$$ drone went the amount we wanted at this point, so we stop the drone $$
	move_horizontal(0);
}

fnc::void goVertical(int meters, int direction){
	is direction != 0 ??
		int initialHeight = barometer.getAltitude();
		move_vertical(direction);

		$$ If moving downwards, direction is -1 and (barometer.getAltitude() - initialHeight) value will be negative so we multiply by direction $$
		while direction*(barometer.getAltitude() - initialHeight) < meters ??
		endwhile
	endis
	$$ drone went the amount we wanted at this point, so we stop the drone $$
	move_vertical(0);
}
start_main
$$ Program start $$
out("Welcome, this program allows the drone to spray in a triangular area.\n");
out("Note: It assumes that the drone is already positioned on the bottom left corner of the field.\n");
out("The current temperature outside is: ");
out(getTemperature());
out(" degrees Celcius\n");

out("Are you sure you want to irrigate the field? Enter Y for yes, N for no:");
string input = in();
while input != "Y" || input != "N" ??
	out("Error: Invalid input, please type Y or N:\n");
	input = in();
endwhile

is input == "N" ??
	out("Ending program...\n");
endis
or input == "Y" ??
	out("Please enter the x dimension of the field:\n");
	int x = in();
	while x < 0 ??
		out("x must be positive. Please re enter x:\n");
		x = in();
	endwhile

	out("Please enter the y dimension of the field:\n");
	int y = in();
	while y < 0 ??
		out("y must be positive. Please re enter x:\n");
		y = in();
	endwhile
	
	goVertical(10, 1); $$ Drone will spray from a height of 10 meters. $$
	
	toggle_spray(true); $$ Start the spray of the drone. $$
	out("The drone has started irrigating. \n");

	$$ The drone will spray each horizontal "line" one by one, return to the start of the line and start on the next line until the triangle is fully sprayed. $$
	for int i = 0; i < y; i += 2; ??
		$$ Turn the drone towards east $$
		turn(east);
		goHorizontal(x,1); $$ spray for x meters $$
		turn(west);
		goHorizontal(1, 1); $$ The drone sprays for 1 meters to the left, to prepare for the next line$$
		
		turn(north);
		goHorizontal(1,1); $$ spray for one meter upwards $$
		
		x--; $$ for the next line, the drone will spray for one meter less $$
		turn(west);
		goHorizontal(x, 1); $$ The drone sprays for x - 1 meters $$
		
		turn(north);
		goHorizontal(1,1); $$ spray for one meter upwards $$
	endfor

	toggle_spray(false); $$ End the spray of the drone. $$
	out("The irrigation is done.");
	
	goVertical(10, -1); $$ Drone return to the ground. $$
endor
end_main
end_program